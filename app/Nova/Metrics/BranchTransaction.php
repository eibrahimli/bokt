<?php

namespace App\Nova\Metrics;

use App\Models\Transaction;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Metrics\Value;

class BranchTransaction extends Value
{

    private $id;
    private $url;
    private $key;

    public function __construct($component = null, $name, $id, $url)
    {

        $this->key = $name;
        $this->id = $id;
        $this->url = $url;
    }

    public function calculate(NovaRequest $request)
    {
        $query = Transaction::query()->whereHas('loan', function($q) {
           $q->where('branch_id', $this->id);
        });

        if($request->range == 'TODAY'){
            $query->whereDate('created_at', '=', now()->toDateString());
        } else {
            $query->whereDate('created_at', '>=', now()->subDays($request->range)->toDateString());
        }

        return $this->result($query->sum('price'));
    }

    public function ranges()
    {
        return [
            'TODAY' => __('Bu gün'),
            30 => __('30 Days'),
            60 => __('60 Days'),
            365 => __('365 Days'),
        ];
    }

    public function cacheFor()
    {
        // return now()->addMinutes(5);
    }

    public function uriKey()
    {
        return $this->id.'-'.$this->name.'-branch-transaction';
    }

    public function name()
    {
        return $this->key.' üzrə gəlirlər'; // TODO: Change the autogenerated stub
    }
}
