<?php

namespace App\Nova\Metrics;

use App\Models\Transaction;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Metrics\Value;

class FakeReceivedTransaction extends Value
{
    public $model,$name;

    public function __construct($component = null,$model = null,$name = '')
    {
        parent::__construct($component);
        $this->model = $model;
        $this->name = $name;
    }

    public function calculate(NovaRequest $request)
    {
        $sum = Transaction::sum('price');
        dd($sum);
        if($request->range === null):
            $this->result($sum);
        endif;    

        return $this->sum($request, Transaction::class, 'price');
    }

    /**
     * Get the ranges available for the metric.
     *
     * @return array
     */
    public function ranges()
    {
        return [
            null => __('All time'),
            30 => __('30 Days'),
            60 => __('60 Days'),
            365 => __('365 Days'),
            'TODAY' => __('Today'),
            'MTD' => __('Month To Date'),
            'QTD' => __('Quarter To Date'),
            'YTD' => __('Year To Date'),
        ];
    }

    /**
     * Get the URI key for the metric.
     *
     * @return string
     */
    public function uriKey()
    {
        return $this->name();
    }

    public function name()
    {
        return $this->name; // TODO: Change the autogenerated stub
    }
}
