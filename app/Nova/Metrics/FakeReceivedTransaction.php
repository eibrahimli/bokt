<?php

namespace App\Nova\Metrics;

use App\Models\Customer;
use Illuminate\Support\Carbon;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Metrics\Value;

class FakeReceivedTransaction extends Value
{
    public $model,$name;
    public function __construct($component = null,$model = null,$name = '', $value = 567976)
    {
        parent::__construct($component);
        $this->model = $model;
        $this->name = $name;
        $this->value = $value;
    }

    public function calculate(NovaRequest $request)
    {

        $query = $this->model::query();

        if ($request->range) {
            $query->where('created_at', '>', (new Carbon('-' . $request->range . ' days'))->format('Y-m-d'));
        }
        return $this->result($this->value)->allowZeroResult();
    }

    /**
     * Get the ranges available for the metric.
     *
     * @return array
     */
    public function ranges()
    {
        return [
            null => __('All time'),
            1 => 'Bu gün',
            7 => 'Bu həftə',
            30 => __('30 Days'),
            60 => __('60 Days'),
            365 => __('365 Days'),
        ];
    }

    /**
     * Determine for how many minutes the metric should be cached.
     *
     * @return  \DateTimeInterface|\DateInterval|float|int
     */
    public function cacheFor()
    {
        // return now()->addMinutes(5);
    }

    /**
     * Get the URI key for the metric.
     *
     * @return string
     */
    public function uriKey()
    {
        return 'data-about-models';
    }

    public function name()
    {
        return $this->name; // TODO: Change the autogenerated stub
    }
}
