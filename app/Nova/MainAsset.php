<?php

namespace App\Nova;

use Eibrahimli\EdvCalculation\EdvCalculation;
use Eibrahimli\EdvTool\EdvTool;
use Illuminate\Http\Request;
use KossShtukert\LaravelNovaSelect2\Select2;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\Date;
use Laravel\Nova\Fields\HasMany;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Fields\Text;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Panel;
use Yassi\NestedForm\NestedForm;

class MainAsset extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static $model = \App\Models\MainAsset::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'id';

    public static $group = 'Mühasibatlıq';

    public static function label(): string
    {
        return 'Əsas vəsaitlər və Qeyri Maddi Aktivlər '; // TODO: Change the autogenerated stub
    }

    public static function singularLabel(): string
    {
        return 'Əsas vəsaitlər və Qeyri Maddi Aktivlər'; // TODO: Change the autogenerated stub
    }

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
    ];

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make(__('ID'), 'id')->sortable(),
            BelongsTo::make(__('Müqavilə'), 'contract', Contract::class)->onlyOnIndex(),
            Select2::make(__('Müqavilə'), 'contract_id')
                ->options(\App\Models\Contract::all()->mapWithKeys(function ($contract) {
                    return [$contract->id => $contract->supplier->name." ".$contract->branch->name." ".$contract->contract_number];
                }))
                ->displayUsingLabels(),
            Text::make(__("Hesab Faktura Nömrəsi"),"invoice_number"),
            Text::make(__("EQF Nömrəsi"),"einvoice_number"),
            Date::make(__("EQF Tarixi"),"einvoice_date"),
            BelongsTo::make(__('Amortizasiya hesabı'), 'depAccount', DepreciationAccount::class)->showCreateRelationButton(),
            BelongsTo::make(__('Branch'), 'branch', Branch::class)->showCreateRelationButton(),
            Text::make(__("Əsas vəsaitin saxlandığı yer"),"asset_location"),
            BelongsTo::make(__('Məsul şəxs'), 'user', User::class)->showCreateRelationButton(),
            NestedForm::make('AssetInner')->heading('Malların siyahısı'),
            HasMany::make(__('Malların siyahısı'), 'AssetInner', AssetInner::class)->onlyOnDetail(),
            new Panel('Ədv Hesabatı', [
                EdvCalculation::make('Test')

            ])
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function cards(Request $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function filters(Request $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function lenses(Request $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function actions(Request $request)
    {
        return [];
    }
}
