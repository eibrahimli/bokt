<?php

namespace App\Nova;

use Eibrahimli\CalculationField\CalculationField;
use Eibrahimli\CustomFieldHelpCalculation\CustomFieldHelpCalculation;
use Eibrahimli\CustomTotalField\CustomTotalField;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\Text;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Http\Requests\NovaRequest;

class WorkInner extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static $model = \App\Models\WorkInner::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public function title()
    {
        return "salam";//$this->name;
    }
    public static $displayInNavigation = false;

    public static function label(): string
    {
        return 'İş və xidmətlərin detalı'; // TODO: Change the autogenerated stub
    }

    public static function singularLabel(): string
    {
        return 'İş və xidmətlərin detalı'; // TODO: Change the autogenerated stub
    }

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
    ];

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function fields(Request $request): array
    {
        return [
            ID::make(__('ID'), 'id')->sortable(),
            Text::make(__("Adı"),"name"),
            BelongsTo::make(__('Malların iş və xidmətlərin kateqoriyası'), 'assetCategory', AssetCategory::class)->showCreateRelationButton(),
            BelongsTo::make(__('Ölçü vahidi'), 'measures', Measure::class)->showCreateRelationButton(),
/*            Text::make(__("Ölçü vahidi"),"measure"),*/
            CalculationField::make(__("Miqdar"),"quantity"),
            CalculationField::make(__("Qiyməti"),"unit_price"),
            CustomFieldHelpCalculation::make(__("Məbləği"),"price"),
            CalculationField::make(__("ƏDV"),"edv")->depends(true),
            CustomTotalField::make(__("Tam qiyməti"),"total_price"),
            /*Text::make(__("Debet"),"debet"),
            Text::make(__("Kredit"),"credit"),*/
            BelongsTo::make(__('Müxabirləşmə (Debet)'), 'debetAccount', DcAccount::class)->showCreateRelationButton(),
            BelongsTo::make(__('Müxabirləşmə (Kredit)'), 'creditAccount', DcAccount::class)->showCreateRelationButton(),

            BelongsTo::make(__('İş haqqında'), 'work', Work::class),

        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function cards(Request $request): array
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function filters(Request $request): array
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function lenses(Request $request): array
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function actions(Request $request): array
    {
        return [];
    }
}
